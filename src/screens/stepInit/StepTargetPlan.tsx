import React from 'react';
import { Platform, TextInput } from 'react-native';
import WizardFrame from '../../components/WizardFrame';
import { useWizard } from '../../context/WizardContext';
import { colors as C } from '../../constants/colors';
import ViewComponent from '../../components/ViewComponent';
import TextComponent from '../../components/TextComponent';

/* ==== Khuy·∫øn ngh·ªã (gi·ªØ theo y√™u c·∫ßu) ==== */
const REC_LOSS_PACE = { min: 0.5, max: 1.0 }; // kg/tu·∫ßn
const REC_GAIN_PACE = { min: 0.25, max: 0.5 }; // kg/tu·∫ßn
const LOSS_HARD_DEFICIT_KCAL = 1000; // kcal/ng√†y (WHO/FAO)

const calcDailyAdjustment = (kgChange: number, weeks: number) => {
  const days = Math.max(1, Math.round(weeks * 7));
  return (kgChange * 7700) / days; // kcal/day (unsigned)
};
const fmt = (n: number, d = 2) =>
  Number.isFinite(n) ? Number(n.toFixed(d)).toString() : '‚Äî';

const INPUT_HEIGHT = 50;

const StepTargetPlanScreen: React.FC = () => {
  const { form, updateForm } = useWizard();
  const isLoss = form.target === 'lose';
  const isGain = form.target === 'gain';
  const isMaintain = form.target === 'maintain';

  // preset khi m·ªü/ƒë·ªïi m·ª•c ti√™u
  const [kg, setKg] = React.useState<string>('');
  const [weeks, setWeeks] = React.useState<string>('');
  React.useEffect(() => {
    if (isLoss) {
      setKg('6'); // ~0.75 kg/tu·∫ßn cho 8 tu·∫ßn
      setWeeks('8');
    } else if (isGain) {
      setKg('3'); // ~0.375 kg/tu·∫ßn cho 8 tu·∫ßn
      setWeeks('8');
    } else {
      setKg('0');
      setWeeks('0');
    }
  }, [isLoss, isGain]);

  // parse & t√≠nh to√°n
  const kgNum = Math.max(0, Number(kg) || 0);
  const weeksNum = Math.max(0, Number(weeks) || 0);

  const pacePerWeek = weeksNum > 0 ? kgNum / weeksNum : 0;
  const dailyAdjUnsigned =
    weeksNum > 0 ? calcDailyAdjustment(kgNum, weeksNum) : 0;

  // ==== H·ª¢P L·ªÜ C∆† B·∫¢N: lose/gain ph·∫£i nh·∫≠p ƒë·ªß c·∫£ 2 √¥ > 0 ====
  const requiredBoth = isMaintain ? true : kgNum > 0 && weeksNum > 0;

  // ==== ƒêi·ªÅu ki·ªán an to√†n ====
  // Gi·∫£m c√¢n: 0.5‚Äì1.0 kg/tu·∫ßn + kh√¥ng c·∫Øt qu√° 1000 kcal/ng√†y
  const withinLossPace =
    isLoss && weeksNum > 0
      ? pacePerWeek >= REC_LOSS_PACE.min && pacePerWeek <= REC_LOSS_PACE.max
      : true;

  const lossOverHardDeficit =
    isLoss && dailyAdjUnsigned > LOSS_HARD_DEFICIT_KCAL;

  // TƒÉng c√¢n: CH·ªà ki·ªÉm tra t·ªëc ƒë·ªô 0.25‚Äì0.5 kg/tu·∫ßn
  const withinGainPace =
    isGain && weeksNum > 0
      ? pacePerWeek >= REC_GAIN_PACE.min && pacePerWeek <= REC_GAIN_PACE.max
      : true;

  // H·ª£p l·ªá t·ªïng (ƒë·ªß input) & an to√†n theo m·ª•c ti√™u
  const withinSafe =
    requiredBoth &&
    (isMaintain
      ? true
      : isLoss
      ? withinLossPace && !lossOverHardDeficit
      : withinGainPace);

  // üëâ GHI V√ÄO FORM: delta c√≥ d·∫•u (√¢m n·∫øu gi·∫£m, d∆∞∆°ng n·∫øu tƒÉng), weeks + valid
  React.useEffect(() => {
    const signedDelta = isLoss ? -kgNum : isGain ? +kgNum : 0;
    updateForm({
      targetWeightDeltaKg: signedDelta,
      targetDurationWeeks: weeksNum,
      targetPlanValid: withinSafe,
    });
  }, [kgNum, weeksNum, isLoss, isGain, withinSafe, updateForm]);

  const tipText = isLoss
    ? `Khuy·∫øn ngh·ªã: gi·∫£m ${REC_LOSS_PACE.min}‚Äì${REC_LOSS_PACE.max} kg/tu·∫ßn. ` +
      `T·ªëc ƒë·ªô hi·ªán t·∫°i: ${fmt(pacePerWeek)} kg/tu·∫ßn. ` +
      `M·ª©c c·∫Øt ∆∞·ªõc t√≠nh: ${fmt(dailyAdjUnsigned, 0)} kcal/ng√†y.`
    : isGain
    ? `Khuy·∫øn ngh·ªã: tƒÉng ${REC_GAIN_PACE.min}‚Äì${REC_GAIN_PACE.max} kg/tu·∫ßn. ` +
      `T·ªëc ƒë·ªô hi·ªán t·∫°i: ${fmt(pacePerWeek)} kg/tu·∫ßn. ` +
      `∆Ø·ªõc t√≠nh ƒëi·ªÅu ch·ªânh nƒÉng l∆∞·ª£ng: ${fmt(dailyAdjUnsigned, 0)} kcal/ng√†y.`
    : 'Gi·ªØ c√¢n: m·ª•c ti√™u thay ƒë·ªïi c√¢n n·∫∑ng l√† 0.';

  return (
    <WizardFrame
      title={
        isLoss
          ? 'B·∫°n mu·ªën gi·∫£m bao nhi√™u & trong bao l√¢u?'
          : isGain
          ? 'B·∫°n mu·ªën tƒÉng bao nhi√™u & trong bao l√¢u?'
          : 'B·∫°n mu·ªën gi·ªØ c√¢n'
      }
      subtitle="Ch√∫ng t√¥i s·∫Ω ki·ªÉm tra an to√†n v√† t√≠nh l∆∞·ª£ng calo c·∫ßn ƒëi·ªÅu ch·ªânh m·ªói ng√†y."
    >
      <ViewComponent style={{ width: '100%' }} gap={14}>
        {/* H√†ng nh·∫≠p: kg & tu·∫ßn */}
        <ViewComponent row alignItems="center" style={{ columnGap: 10 as any }}>
          {/* KG */}
          <ViewComponent style={{ width: '48%' }}>
            <TextComponent
              text={
                isLoss
                  ? 'Mu·ªën gi·∫£m'
                  : isGain
                  ? 'Mu·ªën tƒÉng'
                  : 'Thay ƒë·ªïi c√¢n n·∫∑ng'
              }
              variant="subtitle"
              style={{ marginBottom: 5 }}
            />
            <ViewComponent
              row
              between
              center
              radius={10}
              border
              borderColor={C.slate300}
              backgroundColor={C.white}
              px={10}
              style={{ height: INPUT_HEIGHT, justifyContent: 'center' }}
            >
              <TextInput
                value={kg}
                onChangeText={setKg}
                editable={!isMaintain}
                keyboardType={Platform.OS === 'ios' ? 'decimal-pad' : 'numeric'}
                placeholder="0"
                accessibilityLabel="S·ªë kg m·ª•c ti√™u"
                returnKeyType="done"
                style={{
                  flex: 1,
                  fontSize: 15,
                  color: isMaintain ? C.slate300 : C.slate900,
                  paddingVertical: Platform.OS === 'ios' ? 10 : 8,
                  paddingRight: 8,
                }}
              />
              <TextComponent text="kg" weight="semibold" tone="muted" />
            </ViewComponent>
          </ViewComponent>

          {/* WEEKS */}
          <ViewComponent style={{ width: '48%' }}>
            <TextComponent
              text="Th·ªùi gian"
              variant="subtitle"
              style={{ marginBottom: 5 }}
            />
            <ViewComponent
              row
              between
              center
              radius={10}
              border
              borderColor={C.slate300}
              backgroundColor={C.white}
              px={10}
              style={{ height: INPUT_HEIGHT, justifyContent: 'center' }}
            >
              <TextInput
                value={weeks}
                onChangeText={setWeeks}
                editable={!isMaintain}
                keyboardType={Platform.OS === 'ios' ? 'decimal-pad' : 'numeric'}
                placeholder="0"
                accessibilityLabel="S·ªë tu·∫ßn"
                returnKeyType="done"
                style={{
                  flex: 1,
                  fontSize: 15,
                  color: isMaintain ? C.slate300 : C.slate900,
                  paddingVertical: Platform.OS === 'ios' ? 10 : 8,
                  paddingRight: 8,
                }}
              />
              <TextComponent text="tu·∫ßn" weight="semibold" tone="muted" />
            </ViewComponent>
          </ViewComponent>
        </ViewComponent>

        {/* Banner an to√†n/c·∫£nh b√°o */}
        <ViewComponent
          radius={10}
          p={10}
          border
          borderColor={withinSafe ? C.emerald200 : '#FACC15'}
          backgroundColor={withinSafe ? C.emerald50 : '#FFF7E6'}
        >
          <TextComponent
            text={tipText}
            size={13.5}
            weight="semibold"
            color={withinSafe ? C.emerald700 : C.amber700}
            style={{ lineHeight: 18 }}
          />

          {/* Thi·∫øu d·ªØ li·ªáu b·∫Øt bu·ªôc (lose/gain) */}
          {!isMaintain && !requiredBoth && (
            <TextComponent
              text="‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªß s·ªë kg v√† s·ªë tu·∫ßn (> 0)."
              size={12.5}
              color={C.red}
              style={{ marginTop: 4 }}
            />
          )}

          {form.target === 'lose' ? (
            <>
              {weeksNum > 0 && !withinLossPace && (
                <TextComponent
                  text={`‚ö†Ô∏è T·ªëc ƒë·ªô kh√¥ng trong kho·∫£ng khuy·∫øn ngh·ªã ${REC_LOSS_PACE.min}‚Äì${REC_LOSS_PACE.max} kg/tu·∫ßn.`}
                  size={12.5}
                  color={C.red}
                  style={{ marginTop: 4 }}
                />
              )}
              {lossOverHardDeficit && (
                <TextComponent
                  text={`‚ö†Ô∏è WHO/FAO: Kh√¥ng n√™n c·∫Øt qu√° ${LOSS_HARD_DEFICIT_KCAL} kcal/ng√†y. H√£y k√©o d√†i th·ªùi gian ho·∫∑c gi·∫£m m·ª•c ti√™u/tu·∫ßn.`}
                  size={12.5}
                  color={C.red}
                  style={{ marginTop: 4 }}
                />
              )}
              <TextComponent
                text="*WHO/FAO: Kh√¥ng n√™n ƒÉn d∆∞·ªõi ~1200 kcal/ng√†y (n·ªØ) ho·∫∑c ~1500 kcal/ng√†y (nam)."
                variant="caption"
                tone="muted"
                style={{ marginTop: 2 }}
              />
            </>
          ) : form.target === 'gain' ? (
            <>
              {weeksNum > 0 && !withinGainPace && (
                <TextComponent
                  text={`‚ö†Ô∏è T·ªëc ƒë·ªô tƒÉng n√™n trong ${REC_GAIN_PACE.min}‚Äì${REC_GAIN_PACE.max} kg/tu·∫ßn ƒë·ªÉ ∆∞u ti√™n tƒÉng n·∫°c.`}
                  size={12.5}
                  color={C.red}
                  style={{ marginTop: 4 }}
                />
              )}
            </>
          ) : null}
        </ViewComponent>

        {/* Cards t√≥m t·∫Øt */}
        <ViewComponent row gap={10} mt={6}>
          <ViewComponent flex={1} variant="card" p={10} radius={10} border>
            <TextComponent text="T·ªëc ƒë·ªô" variant="caption" tone="muted" />
            <TextComponent
              text={`${fmt(pacePerWeek)} kg/tu·∫ßn`}
              size={16.5}
              weight="bold"
              color={C.slate900}
            />
          </ViewComponent>

          <ViewComponent flex={1} variant="card" p={10} radius={10} border>
            <TextComponent
              text={
                form.target === 'lose' ? 'M·ª©c c·∫Øt calo' : '∆Ø·ªõc t√≠nh nƒÉng l∆∞·ª£ng'
              }
              variant="caption"
              tone="muted"
            />
            <TextComponent
              text={`${form.target === 'lose' ? '‚àí' : '+'}${fmt(
                dailyAdjUnsigned,
                0,
              )} kcal/ng√†y`}
              size={16.5}
              weight="bold"
              color={C.slate900}
            />
            <TextComponent
              text={
                form.target === 'lose'
                  ? `D·ª±a tr√™n 7.700 kcal/kg ‚Ä¢ Kh√¥ng c·∫Øt > ${LOSS_HARD_DEFICIT_KCAL} kcal/ng√†y`
                  : `D·ª±a tr√™n 7.700 kcal/kg ‚Ä¢ ∆Ø·ªõc t√≠nh theo m·ª•c ti√™u`
              }
              variant="caption"
              tone="muted"
              style={{ marginTop: 2 }}
            />
          </ViewComponent>
        </ViewComponent>

        <TextComponent
          text="*T·ªëc ƒë·ªô qu√° nhanh c√≥ th·ªÉ g√¢y m·∫•t c∆°, r·ªëi lo·∫°n chuy·ªÉn ho√° ho·∫∑c t√≠ch m·ª° th·ª´a. TƒÉng/gi·∫£m t·ª´ t·ª´ gi√∫p ki·ªÉm so√°t dinh d∆∞·ª°ng t·ªët h∆°n."
          variant="caption"
          tone="muted"
          style={{ marginTop: 4 }}
        />
      </ViewComponent>
    </WizardFrame>
  );
};

export default StepTargetPlanScreen;
